services:
  postgres:
    image: postgres:15-alpine
    container_name: quiz-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-quiz_db}
      POSTGRES_USER: ${POSTGRES_USER:-quiz_user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-quiz_password}
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - quiz-network
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U $POSTGRES_USER -d $POSTGRES_DB" ]
      interval: 10s
      timeout: 5s
      retries: 5

  quiz-server:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: quiz-server-app
    restart: unless-stopped
    environment:
      SERVER_PORT: ${SERVER_PORT}
      DB_URL: jdbc:postgresql://postgres:5432/db_quiz_server
      DB_USERNAME: ${POSTGRES_USER}
      DB_PASSWORD: ${POSTGRES_PASSWORD}
      JWT_SECRET_KEY: ${JWT_SECRET_KEY}
      JWT_ACCESS_EXPIRATION: ${JWT_ACCESS_EXPIRATION:-3600000}
      JWT_REFRESH_EXPIRATION: ${JWT_REFRESH_EXPIRATION:-604800000}
      HIBERNATE_DDL_AUTO: ${HIBERNATE_DDL_AUTO:-validate}
      SHOW_SQL: ${SHOW_SQL:-false}
      FORMAT_SQL: ${FORMAT_SQL:-false}
      FLYWAY_ENABLED: ${FLYWAY_ENABLED:-true}
    ports:
      - "${SERVER_PORT:-8081}:${SERVER_PORT:-8081}"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - quiz-network

volumes:
  postgres_data:
    driver: local

networks:
  quiz-network:
    driver: bridge